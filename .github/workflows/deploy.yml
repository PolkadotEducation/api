name: CI/CD workflow

on:
  pull_request:
    branches:
      - develop
      - main
  push:
    branches:
      - develop
      - main

permissions:
  id-token: write
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ github.event.pull_request.base.ref || github.ref_name }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Environment
        run: |
          touch .env
          echo "NODE_ENV=${{ vars.NODE_ENV }}" >> .env
          echo "SERVER_HOST=${{ vars.HOST }}" >> .env
          echo "SERVER_PORT=${{ vars.PORT }}" >> .env
          echo "JWT_SECRET=${{ vars.JWT_SECRET }}" >> .env
          echo "MONGODB_URI=${{ vars.MONGODB_URI }}" >> .env
          echo "AWS_SES_REGION=${{ vars.AWS_REGION }}" >> .env
          echo "AWS_SES_ID=${{ secrets.AWS_SES_ID }}" >> .env
          echo "AWS_SES_SECRET=${{ secrets.AWS_SES_SECRET }}" >> .env
          echo "AWS_SES_SOURCE=${{ vars.APAWS_SES_SOURCEP_URL }}" >> .env
          echo "APP_URL=${{ vars.APP_URL }}" >> .env
          echo "" >> .env

      - name: Install
        run: yarn install --frozen-lockfile

      - name: Format
        run: yarn format

      - name: Lint
        run: yarn lint

      - name: Test
        run: yarn test

      - name: Build
        run: yarn build
